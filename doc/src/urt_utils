functions urt_utils
# URT - Unified Real-Time Interface
version version 0.4.0
author Shahbaz Youssefi
keyword real-time
keyword middleware
keyword interface
shortcut index
shortcut globals
shortcut constants
previous functions urt_time
next functions urt_mem

Functions of this module provide miscellaneous utilities.

FUNCTION urt_get_free_name: (name: char[URT_NAME_LEN]): int
	Get and reserve an unused name

	This function finds an unused name, fills it in **`name`** and reserves it.

	Currently, the function generates unique names that cannot be used by the user. This makes the function faster for the first ~70 million names.
	After that, the function reiterates the previous names and finds one that is not used. As long as the maximum possible number of object
	(`URT_CONFIG_MAX_SHARED_OBJECTS`) is less than about 70 million, this functions should always eventually find a free name.

	INPUT name
		A new name available to be used as a shared object name.
	OUTPUT
		Returns one of the following:

		- `0` on success,
		- `ENOSPC` based on whether a name was available or not.

FUNCTION urt_is_rt_context: (): bool
	Whether calling thread is in real-time context

	A call to this function determines whether the calling thread is in real-time context, and therefore can call URT functions or not.

	OUTPUT
		Returns `true` if the calling thread is in real-time context.

FUNCTION urt_make_rt_context: (prev: int *): int
	Make the current context a real-time one if not already

	This function tries to make the current context real-time if not already. The **`prev`** parameter is used to restore the context
	to the previous one in the call to `[#urt_unmake_rt_context]` and therefore shall not be `NULL`.

	INPUT prev
		A variable used to store the current context.
	OUTPUT
		Returns one of the following:

		- `0` on success,
		- `ENOSUP` if operation is not possible given the underlying host system,
		- Possibly others based on subsystem.

FUNCTION urt_unmake_rt_context: (prev: int): void
	Restore previous context after a call to `urt_make_rt_context`.

	If a call to `[#urt_make_rt_context]` is successful, then the `prev` argument of that function should be provided to this function
	to restore the previous, possibly non-realtime, context.

	INPUT prev
		Previous context before a successful call to `[#urt_make_rt_context]`.
