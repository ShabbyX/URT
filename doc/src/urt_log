functions urt_log
# URT - Unified Real-Time Interface
version version 0.3.0
author Shahbaz Youssefi
keyword real-time
keyword middleware
keyword interface
shortcut index
shortcut globals
shortcut constants
previous functions urt_lock
next index

Functions of this module handle logging.

FUNCTION urt_log: (file: FILE *, fmt: const char *, ...: varargs): void
	Log message

	This function logs a message, `printf` style.  In debug mode, it would prepend the log with the file name (at most the last 25 characters)
	and the line number of the log. In release mode, it will simply log the message. All messages, whether in debug or release mode are prefixed
	with `URT_LOG_PREFIX`, which expands to `"URT: "` if not defined.  Therefore, a user can define `URT_LOG_PREFIX` before including `urt.h` to
	obtain the desired prefix.

	If in kernel space, **`file`** is not used.  In user-space, if **`file`** is NULL, the log operation is not done.

	INPUT file
		The file where the log would be written.
	INPUT fmt
		`printf`-style format string.
	INPUT ...
		Parameters of the format.

FUNCTION urt_dbg: (file: FILE *, fmt: const char *, ...: varargs): void
	Log debug message

	This function is the same as `[#urt_log]` in debug mode. In release mode, it does nothing.

	INPUT file
		See `[#urt_log]`.
	INPUT fmt
		See `[#urt_log]`.
	INPUT ...
		See `[#urt_log]`.

FUNCTION urt_out: (fmt: const char *, ...: varargs): void
	Output message to `stdout`

	This function is the same as `[#urt_log]` given `stdout` as its `file` argument.

	INPUT fmt
		See `[#urt_log]`.
	INPUT ...
		See `[#urt_log]`.

FUNCTION urt_err: (fmt: const char *, ...: varargs): void
	Output message to `stderr`

	This function is the same as `[#urt_log]` given `stderr` as its `file` argument.

	INPUT fmt
		See `[#urt_log]`.
	INPUT ...
		See `[#urt_log]`.

FUNCTION urt_log_cont: (file: FILE *, fmt: const char *, ...: varargs): void
	Log message witout prefix

	This function is the same as `[#urt_log]`, except it doesn't prepend any prefixes. It is useful for continuing a log that didn't end in a new-line.

	If in kernel space, **`file`** is not used.

	INPUT file
		See `[#urt_log]`.
	INPUT fmt
		See `[#urt_log]`.
	INPUT ...
		See `[#urt_log]`.

FUNCTION urt_dbg_cont: (file: FILE *, fmt: const char *, ...: varargs): void
	Log debug message witout prefix

	This function is the same as `[#urt_log_cont]` in debug mode. In release mode, it does nothing.

	INPUT file
		See `[#urt_log_cont]`.
	INPUT fmt
		See `[#urt_log_cont]`.
	INPUT ...
		See `[#urt_log_cont]`.

FUNCTION urt_out_cont: (fmt: const char *, ...: varargs): void
	Output message to `stdout` without prefix

	This function is the same as `[#urt_log_cont]` given `stdout` as its `file` argument.

	INPUT fmt
		See `[#urt_log_cont]`.
	INPUT ...
		See `[#urt_log_cont]`.

FUNCTION urt_err_cont: (fmt: const char *, ...: varargs): void
	Output message to `stderr` without prefix

	This function is the same as `[#urt_log_cont]` given `stderr` as its `file` argument.

	INPUT fmt
		See `[#urt_log_cont]`.
	INPUT ...
		See `[#urt_log_cont]`.
