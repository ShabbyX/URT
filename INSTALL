Build and Installation of URT
=============================

  0. Overview
  -----------

Table of contents:

1) Prerequisites
2) Configuration
3) Build
4) Installation
5) Usage

  1. Prerequisites
  ----------------

The prerequisites of URT depend on the underlying back-end that URT will be
built again.  The back-end used is referred to as `sys` by URT.  For POSIX
back-ends, there is no prerequisites.  For RTAI-based Linux systems, RTAI
needs to be installed.  Other systems to be supported in the future.

Besides the actual back-end, some common tools are required.  The Makefiles
although generated by automake, have been tested with GNU `make` and their
correctness with non-GNU `make` is unknown.  In short, URT has currently only
been tested with Linux and other POSIX systems are not yet officially
supported.

Currently, URT has only been tested with `gcc`.  Other compilers could be
supported in the future.  To build the documentation, you would need
[`shCompiler`](https://github.com/ShabbyX/shCompiler) built and
[`DocThis!`](https://github.com/ShabbyX/DocThis) built and installed.

  2. Configuration
  ----------------

Configuration is done through the `configure` script.  Developers need to issue
`autoreconf -i` in the begenning and have autoconf archives installed.
Use `--help` to the configure script for help on specific configuration
available.

The most important configuration is `--with-back-end` which determines what
real-time back-end to build for.  Another notable configuration, if you plan
on installing multiple versions of URT with different back-ends, is
`--with-suffix` which appends a suffix to all libraries and executables after
`urt`.

  3. Build
  --------

Same way as all autotools-enabled projects work, run `make` after
configuration.  Run `make check` to perform tests.  Note that some tests, such
as involving kernel module insertions don't have a way to report error by a
non-zero return value.  Therefore, make sure to look at the kernel logs for
possible errors.

If `valgrind` is installed and applicable, it will also be used during tests.

  4. Installation
  ---------------

Again, similar to all autotools-enabled projects, `make install` can be used
to install the library.

  5. Usage
  --------

There is a helper script that you could use: `urt-config` (or if you have
configured URT to build with a suffix, `urt$suffix-config`).

Use `urt-config --help` for a list of options.  This script provides
information on URT itself such as what back-end it is built against, whether
user-space applications or kernel modules are supported, as well as
information on building against URT such as what compile and link flags to
provide.
