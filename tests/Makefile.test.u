# this file is included by */Makefile

include ../../Makefile.config
include ../../Makefile.common

URT_BASE := $(abspath $(CURDIR)/../..)
include $(URT_BASE)/build/Makefile.build
CFLAGS := $(URT_USER_CFLAGS) $(EXTRA_CFLAGS)
# USE_SHARED defined in including Makefile decides whether to build against static or shared lib
ifeq ($(USE_SHARED), y)
  LDFLAGS := -L$(URT_BASE)/build/shared -lurt$(URT_CONFIG_SUFFIX)-$(URT_VERSION) $(URT_USER_LDFLAGS) $(LDFLAGS) $(EXTRA_LDFLAGS)
else
  LDFLAGS := -L$(URT_BASE)/build/static -lurt$(URT_CONFIG_SUFFIX) $(URT_USER_LDFLAGS) $(LDFLAGS) $(EXTRA_LDFLAGS)
endif
# TARGET and possibly TARGET2 defined by including Makefile

.PHONY: all dep clean
all: dep
ifeq ($(URT_MAKE_USER), y)
	@$(MAKE) $(TARGET)
  ifdef TARGET2
	@$(MAKE) $(TARGET2)
  endif
endif
ifeq ($(URT_MAKE_KERNEL), y)
	@$(MAKE) -C kernel all
endif
	@$(SHELL_NOOP)
quiet_cmd_clean = CLEAN   $(CURDIR)/
      cmd_clean = $(RM) $(TARGET) $(TARGET2) *.o Makefile.dep
clean:
	-$(call cmd,clean)

dep: Makefile.dep
	@$(SHELL_NOOP)
LIB_HDR :=
include $(URT_BASE)/include/Makefile.src
include $(URT_SYS)/include/Makefile.src
VPATH := $(URT_BASE)/include:$(URT_SYS)/include
# source dependencies of Makefile.dep defined in including Makefile

quiet_cmd_dep = UPDATE  $(CURDIR)/$@
      cmd_dep = $(CC) $(CFLAGS) $(CC_M) $(filter-out %.h,$^) > $@

Makefile.dep: $(LIB_HDR)
	$(call cmd,dep)

quiet_cmd_ld = LD      $(CURDIR)/$@
      cmd_ld = $(LD) $(LD_o) $@ $(filter-out %.so,$^) $(LDFLAGS)
quiet_cmd_cc = CC      $(CURDIR)/$@
      cmd_cc = $(CC) $(CFLAGS) $(CC_o) $@ $<

# further dependencies of TARGET and possibly TARGET2 defined by including Makefile
$(TARGET): $(URT_BASE)/build/shared/liburt$(URT_CONFIG_SUFFIX)-$(URT_VERSION).so
	$(call cmd,ld)
ifdef TARGET2
$(TARGET2): $(URT_BASE)/build/shared/liburt$(URT_CONFIG_SUFFIX)-$(URT_VERSION).so
	$(call cmd,ld)
endif
%.o: %.c
	$(call cmd,cc)

TEST_PARAMS := "$(TARGET)"
ifdef TARGET2
  ifndef COUNT
    COUNT := 1
  endif
  TEST_PARAMS += "$(TARGET2)" "$(COUNT)"
endif
LOAD_KO=
ifeq ($(URT_NEEDS_KO), y)
  LOAD_KO=needs_ko
endif
.PHONY: execute_test verbose_test
execute_test:
	@$(URT_BASE)/tests/execute_test.bash $(LOAD_KO) $(TEST_PARAMS)
verbose_test:
	@$(URT_BASE)/tests/execute_test.bash $(LOAD_KO) verbose $(TEST_PARAMS)
ifeq ($(URT_CAN_VALGRIND), y)
.PHONY: valgrind_check verbose_valgrind_check
valgrind_check:
	@$(URT_BASE)/tests/execute_test.bash $(LOAD_KO) valgrind $(TEST_PARAMS)
verbose_valgrind_check:
	@$(URT_BASE)/tests/execute_test.bash $(LOAD_KO) valgrind verbose $(TEST_PARAMS)
endif

-include Makefile.dep
